<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
     	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="com.xuri"></context:component-scan>

	<!--proxy-target-class="true"强制使用cglib代理 如果为false则spring会自动选择 -->
	<aop:aspectj-autoproxy proxy-target-class="false" />

	<!-- 数据库配置文件位置 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 配置dbcp数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 池里不会被释放的最多空闲连接数量。设置为0时表示无限制。 -->
		<property name="maxIdle" value="3" />
		<property name="defaultAutoCommit" value="true" />
		<!-- 设置自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!-- 队列中的最小等待数 -->
		<!-- <property name="minIdle" value="${jdbc.minIdle}"></property> -->
		<!-- 队列中的最大等待数 -->
		<!-- <property name="maxIdle" value="${jdbc.maxIdle}"></property> -->
		<!-- 最长等待时间，单位毫秒 -->
		<!-- <property name="maxWait" value="${jdbc.maxWait}"></property> -->
		<!-- 最大活跃数 -->
		<!-- <property name="maxActive" value="${jdbc.maxActive}"></property> -->
		<!-- 初始化连接 -->
		<!-- <property name="initialSize" value="${jdbc.initialSize}"></property> -->
	</bean>

	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="" no-rollback-for="" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="" no-rollback-for="" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="" no-rollback-for="" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="" no-rollback-for="" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!--把事务控制在Service层 -->
		<aop:pointcut id="pc" expression="execution(* com.xuri.main.*.service.impl.*.*(..))" />
		<aop:advisor advice-ref="userTxAdvice" pointcut-ref="pc" />
	</aop:config>
</beans>